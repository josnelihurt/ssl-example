events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # HTTPS server (port 8443) - Standard HTTPS
    server {
        listen 8443 ssl;
        server_name server.local;

        # SSL configuration
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Root location
        location / {
            return 200 "HTTPS OK - Server certificate validated\n";
            add_header Content-Type text/plain;
        }

        # Health check endpoint
        location /health {
            return 200 "HTTPS Health OK\n";
            add_header Content-Type text/plain;
        }
    }

    # mTLS server (port 8444) - Mutual TLS
    server {
        listen 8444 ssl;
        server_name server.local;

        # SSL configuration
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Client certificate verification
        ssl_verify_client on;
        ssl_client_certificate /etc/nginx/certs/root-ca.crt;
        ssl_verify_depth 2;

        # Root location
        location / {
            return 200 "mTLS OK - Client certificate validated\n";
            add_header Content-Type text/plain;
        }

        # Health check endpoint
        location /health {
            return 200 "mTLS Health OK\n";
            add_header Content-Type text/plain;
        }
    }
}
